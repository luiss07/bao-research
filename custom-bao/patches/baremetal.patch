diff --git a/src/main.c b/src/main.c
index 9a9e972..51d6fd7 100644
--- a/src/main.c
+++ b/src/main.c
@@ -17,6 +17,7 @@
 #include <core.h>
 #include <stdlib.h>
 #include <stdio.h>
+#include <string.h> 
 #include <cpu.h>
 #include <wfi.h>
 #include <spinlock.h>
@@ -29,18 +30,10 @@
 
 spinlock_t print_lock = SPINLOCK_INITVAL;
 
-void uart_rx_handler(){
-    printf("cpu%d: %s\n",get_cpuid(), __func__);
-    uart_clear_rxirq();
-}
-
-void ipi_handler(){
-    printf("cpu%d: %s\n", get_cpuid(), __func__);
-    irq_send_ipi(1ull << (get_cpuid() + 1));
-}
-
 void timer_handler(){
-    printf("cpu%d: %s\n", get_cpuid(), __func__);
+    spin_lock(&print_lock);
+    printf("[baremetal] cpu%d: %s\n", get_cpuid(), __func__);
+    spin_unlock(&print_lock);
     timer_set(TIMER_INTERVAL);
     irq_send_ipi(1ull << (get_cpuid() + 1));
 }
@@ -54,27 +47,18 @@ void main(void){
         printf("Bao bare-metal test guest\n");
         spin_unlock(&print_lock);
 
-        irq_set_handler(UART_IRQ_ID, uart_rx_handler);
         irq_set_handler(TIMER_IRQ_ID, timer_handler);
-        irq_set_handler(IPI_IRQ_ID, ipi_handler);
-
-        uart_enable_rxirq();
-
-        timer_set(TIMER_INTERVAL);
-        irq_enable(TIMER_IRQ_ID);
-        irq_set_prio(TIMER_IRQ_ID, IRQ_MAX_PRIO);
-
         master_done = true;
     }
 
-    irq_enable(UART_IRQ_ID);
-    irq_set_prio(UART_IRQ_ID, IRQ_MAX_PRIO);
-    irq_enable(IPI_IRQ_ID);
-    irq_set_prio(IPI_IRQ_ID, IRQ_MAX_PRIO);
-
     while(!master_done);
+
+    timer_set(TIMER_INTERVAL);
+    irq_enable(TIMER_IRQ_ID);
+    irq_set_prio(TIMER_IRQ_ID, IRQ_MAX_PRIO);
+
     spin_lock(&print_lock);
-    printf("cpu %d up\n", get_cpuid());
+    printf("[baremetal] cpu %d up\n", get_cpuid());
     spin_unlock(&print_lock);
 
     while(1) wfi();
